; Generated by lwb rev 1.0.4 at 2018-08-24
; Do not edit.
{:id :notnot-i, :given [P], :conclusion [(not (not P))], :proof [{:plid 1, :roth :premise, :body P} [{:plid 4, :body (not P), :roth :assumption, :refs nil} {:plid 7, :body contradiction, :roth :not-e, :refs [4 1]}] {:plid 2, :body (not (not P)), :roth :not-i, :refs [[4 7]]}]}
{:id :notnot-e, :given [(not (not P))], :conclusion [P], :proof [{:plid 1, :roth :premise, :body (not (not P))} [{:plid 4, :body (not P), :roth :assumption, :refs nil} {:plid 7, :body contradiction, :roth :not-e, :refs [1 4]}] {:plid 2, :body P, :roth :raa, :refs [[4 7]]}]}
{:id :mt, :given [(impl P Q) (not Q)], :conclusion [(not P)], :proof [{:plid 1, :roth :premise, :body (impl P Q)} {:plid 2, :roth :premise, :body (not Q)} [{:plid 5, :body P, :roth :assumption, :refs nil} {:plid 8, :body Q, :roth :impl-e, :refs [1 5]} {:plid 9, :body contradiction, :roth :not-e, :refs [2 8]}] {:plid 3, :body (not P), :roth :not-i, :refs [[5 9]]}]}
{:id :tnd, :given [], :conclusion [(or P (not P))], :proof [[{:plid 3, :body (not (or P (not P))), :roth :assumption, :refs nil} [{:plid 8, :body P, :roth :assumption, :refs nil} {:plid 11, :body (or P (not P)), :roth :or-i1, :refs [8]} {:plid 12, :body contradiction, :roth :not-e, :refs [3 11]}] {:plid 7, :body (not P), :roth :not-i, :refs [[8 12]]} {:plid 6, :body (or P (not P)), :roth :or-i2, :refs [7]} {:plid 5, :body contradiction, :roth :not-e, :refs [3 6]}] {:plid 1, :body (or P (not P)), :roth :raa, :refs [[3 5]]}]}
{:id :not-or-e1, :given [(not (or P Q))], :conclusion [(not P)], :proof [{:plid 1, :roth :premise, :body (not (or P Q))} [{:plid 4, :body P, :roth :assumption, :refs nil} {:plid 7, :body (or P Q), :roth :or-i1, :refs [4]} {:plid 8, :body contradiction, :roth :not-e, :refs [1 7]}] {:plid 2, :body (not P), :roth :not-i, :refs [[4 8]]}]}
{:id :not-or-e2, :given [(not (or P Q))], :conclusion [(not Q)], :proof [{:plid 1, :roth :premise, :body (not (or P Q))} [{:plid 4, :body Q, :roth :assumption, :refs nil} {:plid 7, :body (or P Q), :roth :or-i2, :refs [4]} {:plid 8, :body contradiction, :roth :not-e, :refs [1 7]}] {:plid 2, :body (not Q), :roth :not-i, :refs [[4 8]]}]}
{:id :or-truth->truth, :given [(or P truth)], :conclusion [truth], :proof [{:plid 1, :roth :premise, :body (or P truth)} [{:plid 4, :body P, :roth :assumption, :refs nil} {:plid 10, :body (or P (not P)), :roth :or-i1, :refs [4]} {:plid 11, :body truth, :roth :truth, :refs [10]}] [{:plid 7, :body truth, :roth :assumption, :refs nil} {:plid 9, :body truth, :roth :repeat, :refs [7]}] {:plid 2, :body truth, :roth :or-e, :refs [1 [4 11] [7 9]]}]}
{:id :truth->or-truth, :given [truth], :conclusion [(or P truth)], :proof [{:plid 1, :roth :premise, :body truth} {:plid 2, :body (or P truth), :roth :or-i2, :refs [1]}]}
{:id :or-contra-e, :given [(or P contradiction)], :conclusion [P], :proof [{:plid 1, :roth :premise, :body (or P contradiction)} [{:plid 4, :body P, :roth :assumption, :refs nil} {:plid 6, :body P, :roth :repeat, :refs [4]}] [{:plid 7, :body contradiction, :roth :assumption, :refs nil} {:plid 9, :body P, :roth :efq, :refs [7]}] {:plid 2, :body P, :roth :or-e, :refs [1 [4 6] [7 9]]}]}
{:id :or-contra-i, :given [P], :conclusion [(or P contradiction)], :proof [{:plid 1, :roth :premise, :body P} {:plid 2, :body (or P contradiction), :roth :or-i1, :refs [1]}]}
{:id :impl-truth->truth, :given [(impl P truth)], :conclusion [truth], :proof [{:plid 1, :roth :premise, :body (impl P truth)} {:plid 4, :body (or P (not P)), :roth :tnd, :refs []} [{:plid 5, :body P, :roth :assumption, :refs nil} {:plid 11, :body truth, :roth :impl-e, :refs [1 5]}] [{:plid 8, :body (not P), :roth :assumption, :refs nil} [{:plid 12, :body (not truth), :roth :assumption, :refs nil} {:plid 15, :body contradiction, :roth :contradiction, :refs [12]}] {:plid 10, :body truth, :roth :raa, :refs [[12 15]]}] {:plid 2, :body truth, :roth :or-e, :refs [4 [5 11] [8 10]]}]}
{:id :truth->impl-truth, :given [truth], :conclusion [(impl P truth)], :proof [{:plid 1, :roth :premise, :body truth} [{:plid 4, :body P, :roth :assumption, :refs nil} {:plid 6, :body truth, :roth :repeat, :refs [1]}] {:plid 2, :body (impl P truth), :roth :impl-i, :refs [[4 6]]}]}
{:id :impl-contra->not, :given [(impl P contradiction)], :conclusion [(not P)], :proof [{:plid 1, :roth :premise, :body (impl P contradiction)} [{:plid 4, :body (not (not P)), :roth :assumption, :refs nil} {:plid 7, :body P, :roth :notnot-e, :refs [4]} {:plid 8, :body contradiction, :roth :impl-e, :refs [1 7]}] {:plid 2, :body (not P), :roth :raa, :refs [[4 8]]}]}
{:id :not->impl-contra, :given [(not P)], :conclusion [(impl P contradiction)], :proof [{:plid 1, :roth :premise, :body (not P)} [{:plid 4, :body P, :roth :assumption, :refs nil} {:plid 7, :body contradiction, :roth :not-e, :refs [1 4]}] {:plid 2, :body (impl P contradiction), :roth :impl-i, :refs [[4 7]]}]}
{:id :and-truth-e, :given [(and P truth)], :conclusion [P], :proof [{:plid 1, :roth :premise, :body (and P truth)} {:plid 4, :body P, :roth :and-e1, :refs [1]}]}
{:id :and-truth-i, :given [P], :conclusion [(and P truth)], :proof [{:plid 1, :roth :premise, :body P} {:plid 7, :body (or X (not X)), :roth :tnd, :refs []} {:plid 8, :body truth, :roth :truth, :refs [7]} {:plid 2, :body (and P truth), :roth :and-i, :refs [1 8]}]}
{:id :and-contra->contra, :given [(and P contradiction)], :conclusion [contradiction], :proof [{:plid 1, :roth :premise, :body (and P contradiction)} {:plid 4, :body contradiction, :roth :and-e2, :refs [1]}]}
{:id :contra->and-contra, :given [contradiction], :conclusion [(and P contradiction)], :proof [{:plid 1, :roth :premise, :body contradiction} {:plid 2, :body (and P contradiction), :roth :efq, :refs [1]}]}
{:id :impl-truth-e, :given [(impl truth P)], :conclusion [P], :proof [{:plid 1, :roth :premise, :body (impl truth P)} {:plid 4, :body (or X (not X)), :roth :tnd, :refs []} {:plid 5, :body truth, :roth :truth, :refs [4]} {:plid 6, :body P, :roth :impl-e, :refs [1 5]}]}
{:id :impl-truth-i, :given [P], :conclusion [(impl truth P)], :proof [{:plid 1, :roth :premise, :body P} [{:plid 4, :body truth, :roth :assumption, :refs nil} {:plid 6, :body P, :roth :repeat, :refs [1]}] {:plid 2, :body (impl truth P), :roth :impl-i, :refs [[4 6]]}]}
{:id :impl-contra->truth, :given [(impl contradiction P)], :conclusion [truth], :proof [{:plid 1, :roth :premise, :body (impl contradiction P)} {:plid 4, :body (or X (not X)), :roth :tnd, :refs []} {:plid 5, :body truth, :roth :truth, :refs [4]}]}
{:id :truth->impl-contra, :given [truth], :conclusion [(impl contradiction P)], :proof [{:plid 1, :roth :premise, :body truth} [{:plid 4, :body contradiction, :roth :assumption, :refs nil} {:plid 6, :body P, :roth :efq, :refs [4]}] {:plid 2, :body (impl contradiction P), :roth :impl-i, :refs [[4 6]]}]}
{:id :contrap, :given [(impl P Q)], :conclusion [(impl (not Q) (not P))], :proof [{:plid 1, :roth :premise, :body (impl P Q)} [{:plid 4, :body (not Q), :roth :assumption, :refs nil} [{:plid 7, :body P, :roth :assumption, :refs nil} {:plid 10, :body Q, :roth :impl-e, :refs [1 7]} {:plid 9, :body contradiction, :roth :not-e, :refs [4 10]}] {:plid 6, :body (not P), :roth :not-i, :refs [[7 9]]}] {:plid 2, :body (impl (not Q) (not P)), :roth :impl-i, :refs [[4 6]]}]}
{:id :pierce, :given [], :conclusion [(impl (impl (impl P Q) P) P)], :proof [[{:plid 3, :body (impl (impl P Q) P), :roth :assumption, :refs nil} [{:plid 6, :body (not P), :roth :assumption, :refs nil} [{:plid 15, :body P, :roth :assumption, :refs nil} {:plid 18, :body contradiction, :roth :not-e, :refs [6 15]} {:plid 17, :body Q, :roth :efq, :refs [18]}] {:plid 13, :body (impl P Q), :roth :impl-i, :refs [[15 17]]} {:plid 10, :body P, :roth :impl-e, :refs [3 13]} {:plid 8, :body contradiction, :roth :not-e, :refs [6 10]}] {:plid 5, :body P, :roth :raa, :refs [[6 8]]}] {:plid 1, :body (impl (impl (impl P Q) P) P), :roth :impl-i, :refs [[3 5]]}]}
{:id :impl-and->impl-impl, :given [(impl (and P Q) R)], :conclusion [(impl P (impl Q R))], :proof [{:plid 1, :roth :premise, :body (impl (and P Q) R)} [{:plid 4, :body P, :roth :assumption, :refs nil} [{:plid 7, :body Q, :roth :assumption, :refs nil} {:plid 10, :body (and P Q), :roth :and-i, :refs [4 7]} {:plid 11, :body R, :roth :impl-e, :refs [1 10]}] {:plid 6, :body (impl Q R), :roth :impl-i, :refs [[7 11]]}] {:plid 2, :body (impl P (impl Q R)), :roth :impl-i, :refs [[4 6]]}]}
{:id :impl-impl->impl-and, :given [(impl P (impl Q R))], :conclusion [(impl (and P Q) R)], :proof [{:plid 1, :roth :premise, :body (impl P (impl Q R))} [{:plid 4, :body (and P Q), :roth :assumption, :refs nil} {:plid 7, :body P, :roth :and-e1, :refs [4]} {:plid 8, :body (impl Q R), :roth :impl-e, :refs [1 7]} {:plid 9, :body Q, :roth :and-e2, :refs [4]} {:plid 10, :body R, :roth :impl-e, :refs [8 9]}] {:plid 2, :body (impl (and P Q) R), :roth :impl-i, :refs [[4 10]]}]}
{:id :and-comm, :given [(and P Q)], :conclusion [(and Q P)], :proof [{:plid 1, :roth :premise, :body (and P Q)} {:plid 4, :body P, :roth :and-e1, :refs [1]} {:plid 5, :body Q, :roth :and-e2, :refs [1]} {:plid 6, :body (and Q P), :roth :and-i, :refs [5 4]}]}
{:id :or-comm, :given [(or P Q)], :conclusion [(or Q P)], :proof [{:plid 1, :roth :premise, :body (or P Q)} [{:plid 4, :body P, :roth :assumption, :refs nil} {:plid 10, :body (or Q P), :roth :or-i2, :refs [4]}] [{:plid 7, :body Q, :roth :assumption, :refs nil} {:plid 9, :body (or Q P), :roth :or-i1, :refs [7]}] {:plid 2, :body (or Q P), :roth :or-e, :refs [1 [4 10] [7 9]]}]}
{:id :and-assocr, :given [(and P (and Q R))], :conclusion [(and (and P Q) R)], :proof [{:plid 1, :roth :premise, :body (and P (and Q R))} {:plid 4, :body P, :roth :and-e1, :refs [1]} {:plid 5, :body (and Q R), :roth :and-e2, :refs [1]} {:plid 6, :body Q, :roth :and-e1, :refs [5]} {:plid 7, :body R, :roth :and-e2, :refs [5]} {:plid 8, :body (and P Q), :roth :and-i, :refs [4 6]} {:plid 9, :body (and (and P Q) R), :roth :and-i, :refs [8 7]}]}
{:id :and-assocl, :given [(and (and P Q) R)], :conclusion [(and P (and Q R))], :proof [{:plid 1, :roth :premise, :body (and (and P Q) R)} {:plid 4, :body (and P Q), :roth :and-e1, :refs [1]} {:plid 5, :body P, :roth :and-e1, :refs [4]} {:plid 6, :body Q, :roth :and-e2, :refs [4]} {:plid 7, :body R, :roth :and-e2, :refs [1]} {:plid 8, :body (and Q R), :roth :and-i, :refs [6 7]} {:plid 9, :body (and P (and Q R)), :roth :and-i, :refs [5 8]}]}
{:id :or-assocl, :given [(or P (or Q R))], :conclusion [(or (or P Q) R)], :proof [{:plid 1, :roth :premise, :body (or P (or Q R))} [{:plid 4, :body P, :roth :assumption, :refs nil} {:plid 10, :body (or P Q), :roth :or-i1, :refs [4]} {:plid 11, :body (or (or P Q) R), :roth :or-i1, :refs [10]}] [{:plid 7, :body (or Q R), :roth :assumption, :refs nil} [{:plid 12, :body Q, :roth :assumption, :refs nil} {:plid 18, :body (or P Q), :roth :or-i2, :refs [12]} {:plid 19, :body (or (or P Q) R), :roth :or-i1, :refs [18]}] [{:plid 15, :body R, :roth :assumption, :refs nil} {:plid 20, :body (or (or P Q) R), :roth :or-i2, :refs [15]}] {:plid 9, :body (or (or P Q) R), :roth :or-e, :refs [7 [12 19] [15 20]]}] {:plid 2, :body (or (or P Q) R), :roth :or-e, :refs [1 [4 11] [7 9]]}]}
{:id :or-assocr, :given [(or (or P Q) R)], :conclusion [(or P (or Q R))], :proof [{:plid 1, :roth :premise, :body (or (or P Q) R)} [{:plid 4, :body (or P Q), :roth :assumption, :refs nil} [{:plid 10, :body P, :roth :assumption, :refs nil} {:plid 12, :body (or P (or Q R)), :roth :or-i1, :refs [10]}] [{:plid 13, :body Q, :roth :assumption, :refs nil} {:plid 17, :body (or Q R), :roth :or-i1, :refs [13]} {:plid 15, :body (or P (or Q R)), :roth :or-i2, :refs [17]}] {:plid 6, :body (or P (or Q R)), :roth :or-e, :refs [4 [10 12] [13 15]]}] [{:plid 7, :body R, :roth :assumption, :refs nil} {:plid 19, :body (or Q R), :roth :or-i2, :refs [7]} {:plid 9, :body (or P (or Q R)), :roth :or-i2, :refs [19]}] {:plid 2, :body (or P (or Q R)), :roth :or-e, :refs [1 [4 6] [7 9]]}]}
{:id :or-and-dist1, :given [(or P (and Q R))], :conclusion [(and (or P Q) (or P R))], :proof [{:plid 1, :roth :premise, :body (or P (and Q R))} [{:plid 4, :body P, :roth :assumption, :refs nil} {:plid 10, :body (or P Q), :roth :or-i1, :refs [4]} {:plid 11, :body (or P R), :roth :or-i1, :refs [4]} {:plid 6, :body (and (or P Q) (or P R)), :roth :and-i, :refs [10 11]}] [{:plid 7, :body (and Q R), :roth :assumption, :refs nil} {:plid 15, :body Q, :roth :and-e1, :refs [7]} {:plid 16, :body R, :roth :and-e2, :refs [7]} {:plid 17, :body (or P Q), :roth :or-i2, :refs [15]} {:plid 18, :body (or P R), :roth :or-i2, :refs [16]} {:plid 9, :body (and (or P Q) (or P R)), :roth :and-i, :refs [17 18]}] {:plid 2, :body (and (or P Q) (or P R)), :roth :or-e, :refs [1 [4 6] [7 9]]}]}
{:id :or-and-dist2, :given [(and (or P Q) (or P R))], :conclusion [(or P (and Q R))], :proof [{:plid 1, :roth :premise, :body (and (or P Q) (or P R))} {:plid 4, :body (or P (not P)), :roth :tnd, :refs []} [{:plid 5, :body P, :roth :assumption, :refs nil} {:plid 7, :body (or P (and Q R)), :roth :or-i1, :refs [5]}] [{:plid 8, :body (not P), :roth :assumption, :refs nil} {:plid 12, :body (or P Q), :roth :and-e1, :refs [1]} [{:plid 13, :body P, :roth :assumption, :refs nil} {:plid 20, :body contradiction, :roth :not-e, :refs [8 13]} {:plid 15, :body Q, :roth :efq, :refs [20]}] [{:plid 16, :body Q, :roth :assumption, :refs nil} {:plid 18, :body Q, :roth :repeat, :refs [16]}] {:plid 19, :body Q, :roth :or-e, :refs [12 [13 15] [16 18]]} {:plid 22, :body (or P R), :roth :and-e2, :refs [1]} [{:plid 23, :body P, :roth :assumption, :refs nil} {:plid 30, :body contradiction, :roth :not-e, :refs [8 23]} {:plid 25, :body R, :roth :efq, :refs [30]}] [{:plid 26, :body R, :roth :assumption, :refs nil} {:plid 28, :body R, :roth :repeat, :refs [26]}] {:plid 29, :body R, :roth :or-e, :refs [22 [23 25] [26 28]]} {:plid 32, :body (and Q R), :roth :and-i, :refs [19 29]} {:plid 10, :body (or P (and Q R)), :roth :or-i2, :refs [32]}] {:plid 2, :body (or P (and Q R)), :roth :or-e, :refs [4 [5 7] [8 10]]}]}
{:id :and-or-dist1, :given [(and P (or Q R))], :conclusion [(or (and P Q) (and P R))], :proof [{:plid 1, :roth :premise, :body (and P (or Q R))} {:plid 4, :body P, :roth :and-e1, :refs [1]} {:plid 5, :body (or Q R), :roth :and-e2, :refs [1]} [{:plid 6, :body Q, :roth :assumption, :refs nil} {:plid 12, :body (and P Q), :roth :and-i, :refs [4 6]} {:plid 8, :body (or (and P Q) (and P R)), :roth :or-i1, :refs [12]}] [{:plid 9, :body R, :roth :assumption, :refs nil} {:plid 14, :body (and P R), :roth :and-i, :refs [4 9]} {:plid 11, :body (or (and P Q) (and P R)), :roth :or-i2, :refs [14]}] {:plid 2, :body (or (and P Q) (and P R)), :roth :or-e, :refs [5 [6 8] [9 11]]}]}
{:id :and-or-dist2, :given [(or (and P Q) (and P R))], :conclusion [(and P (or Q R))], :proof [{:plid 1, :roth :premise, :body (or (and P Q) (and P R))} [{:plid 4, :body (and P Q), :roth :assumption, :refs nil} {:plid 10, :body P, :roth :and-e1, :refs [4]} {:plid 11, :body Q, :roth :and-e2, :refs [4]} {:plid 13, :body (or Q R), :roth :or-i1, :refs [11]} {:plid 6, :body (and P (or Q R)), :roth :and-i, :refs [10 13]}] [{:plid 7, :body (and P R), :roth :assumption, :refs nil} {:plid 16, :body P, :roth :and-e1, :refs [7]} {:plid 17, :body R, :roth :and-e2, :refs [7]} {:plid 19, :body (or Q R), :roth :or-i2, :refs [17]} {:plid 9, :body (and P (or Q R)), :roth :and-i, :refs [16 19]}] {:plid 2, :body (and P (or Q R)), :roth :or-e, :refs [1 [4 6] [7 9]]}]}
{:id :not-and->or-not, :given [(not (and P Q))], :conclusion [(or (not P) (not Q))], :proof [{:plid 1, :roth :premise, :body (not (and P Q))} [{:plid 4, :body (not (or (not P) (not Q))), :roth :assumption, :refs nil} [{:plid 20, :body (not P), :roth :assumption, :refs nil} {:plid 24, :body (or (not P) (not Q)), :roth :or-i1, :refs [20]} {:plid 22, :body contradiction, :roth :not-e, :refs [4 24]}] {:plid 10, :body P, :roth :raa, :refs [[20 22]]} [{:plid 13, :body (not Q), :roth :assumption, :refs nil} {:plid 17, :body (or (not P) (not Q)), :roth :or-i2, :refs [13]} {:plid 15, :body contradiction, :roth :not-e, :refs [4 17]}] {:plid 11, :body Q, :roth :raa, :refs [[13 15]]} {:plid 8, :body (and P Q), :roth :and-i, :refs [10 11]} {:plid 6, :body contradiction, :roth :not-e, :refs [1 8]}] {:plid 2, :body (or (not P) (not Q)), :roth :raa, :refs [[4 6]]}]}
{:id :or-not->not-and, :given [(or (not P) (not Q))], :conclusion [(not (and P Q))], :proof [{:plid 1, :roth :premise, :body (or (not P) (not Q))} [{:plid 4, :body (not P), :roth :assumption, :refs nil} [{:plid 10, :body (and P Q), :roth :assumption, :refs nil} {:plid 13, :body P, :roth :and-e1, :refs [10]} {:plid 14, :body contradiction, :roth :not-e, :refs [4 13]}] {:plid 6, :body (not (and P Q)), :roth :not-i, :refs [[10 14]]}] [{:plid 7, :body (not Q), :roth :assumption, :refs nil} [{:plid 15, :body (and P Q), :roth :assumption, :refs nil} {:plid 18, :body Q, :roth :and-e2, :refs [15]} {:plid 19, :body contradiction, :roth :not-e, :refs [7 18]}] {:plid 9, :body (not (and P Q)), :roth :not-i, :refs [[15 19]]}] {:plid 2, :body (not (and P Q)), :roth :or-e, :refs [1 [4 6] [7 9]]}]}
{:id :not-or->and-not, :given [(not (or P Q))], :conclusion [(and (not P) (not Q))], :proof [{:plid 1, :roth :premise, :body (not (or P Q))} [{:plid 7, :body P, :roth :assumption, :refs nil} {:plid 10, :body (or P Q), :roth :or-i1, :refs [7]} {:plid 11, :body contradiction, :roth :not-e, :refs [1 10]}] {:plid 4, :body (not P), :roth :not-i, :refs [[7 11]]} [{:plid 12, :body Q, :roth :assumption, :refs nil} {:plid 15, :body (or P Q), :roth :or-i2, :refs [12]} {:plid 16, :body contradiction, :roth :not-e, :refs [1 15]}] {:plid 5, :body (not Q), :roth :not-i, :refs [[12 16]]} {:plid 2, :body (and (not P) (not Q)), :roth :and-i, :refs [4 5]}]}
{:id :and-not->not-or, :given [(and (not P) (not Q))], :conclusion [(not (or P Q))], :proof [{:plid 1, :roth :premise, :body (and (not P) (not Q))} {:plid 4, :body (not P), :roth :and-e1, :refs [1]} {:plid 5, :body (not Q), :roth :and-e2, :refs [1]} [{:plid 6, :body (or P Q), :roth :assumption, :refs nil} [{:plid 9, :body P, :roth :assumption, :refs nil} {:plid 15, :body contradiction, :roth :not-e, :refs [4 9]}] [{:plid 12, :body Q, :roth :assumption, :refs nil} {:plid 16, :body contradiction, :roth :not-e, :refs [5 12]}] {:plid 8, :body contradiction, :roth :or-e, :refs [6 [9 15] [12 16]]}] {:plid 2, :body (not (or P Q)), :roth :not-i, :refs [[6 8]]}]}
{:id :impl->or-not, :given [(impl P Q)], :conclusion [(or (not P) Q)], :proof [{:plid 1, :roth :premise, :body (impl P Q)} [{:plid 4, :body (not (or (not P) Q)), :roth :assumption, :refs nil} {:plid 7, :body (and (not (not P)) (not Q)), :roth :not-or->and-not, :refs [4]} {:plid 8, :body (not (not P)), :roth :and-e1, :refs [7]} {:plid 9, :body P, :roth :notnot-e, :refs [8]} {:plid 10, :body Q, :roth :impl-e, :refs [1 9]} {:plid 11, :body (not Q), :roth :and-e2, :refs [7]} {:plid 12, :body contradiction, :roth :not-e, :refs [11 10]}] {:plid 2, :body (or (not P) Q), :roth :raa, :refs [[4 12]]}]}
{:id :or-not->impl, :given [(or (not P) Q)], :conclusion [(impl P Q)], :proof [{:plid 1, :roth :premise, :body (or (not P) Q)} [{:plid 4, :body (not P), :roth :assumption, :refs nil} [{:plid 10, :body P, :roth :assumption, :refs nil} {:plid 13, :body contradiction, :roth :not-e, :refs [4 10]} {:plid 12, :body Q, :roth :efq, :refs [13]}] {:plid 6, :body (impl P Q), :roth :impl-i, :refs [[10 12]]}] [{:plid 7, :body Q, :roth :assumption, :refs nil} [{:plid 15, :body P, :roth :assumption, :refs nil} {:plid 17, :body Q, :roth :repeat, :refs [7]}] {:plid 9, :body (impl P Q), :roth :impl-i, :refs [[15 17]]}] {:plid 2, :body (impl P Q), :roth :or-e, :refs [1 [4 6] [7 9]]}]}
{:id :not-impl-e, :given [(not (impl P Q))], :conclusion [(and P (not Q))], :proof [{:plid 1, :roth :premise, :body (not (impl P Q))} [{:plid 6, :body (or (not P) Q), :roth :assumption, :refs nil} [{:plid 9, :body (not P), :roth :assumption, :refs nil} [{:plid 16, :body P, :roth :assumption, :refs nil} {:plid 19, :body contradiction, :roth :not-e, :refs [9 16]} {:plid 18, :body Q, :roth :efq, :refs [19]}] {:plid 11, :body (impl P Q), :roth :impl-i, :refs [[16 18]]}] [{:plid 12, :body Q, :roth :assumption, :refs nil} [{:plid 21, :body P, :roth :assumption, :refs nil} {:plid 23, :body Q, :roth :repeat, :refs [12]}] {:plid 14, :body (impl P Q), :roth :impl-i, :refs [[21 23]]}] {:plid 15, :body (impl P Q), :roth :or-e, :refs [6 [9 11] [12 14]]} {:plid 24, :body contradiction, :roth :not-e, :refs [1 15]}] {:plid 4, :body (not (or (not P) Q)), :roth :not-i, :refs [[6 24]]} {:plid 25, :body (not (not P)), :roth :not-or-e1, :refs [4]} {:plid 26, :body P, :roth :notnot-e, :refs [25]} {:plid 27, :body (not Q), :roth :not-or-e2, :refs [4]} {:plid 28, :body (and P (not Q)), :roth :and-i, :refs [26 27]}]}
{:id :not-impl-i, :given [(and P (not Q))], :conclusion [(not (impl P Q))], :proof [{:plid 1, :roth :premise, :body (and P (not Q))} [{:plid 4, :body (impl P Q), :roth :assumption, :refs nil} {:plid 7, :body P, :roth :and-e1, :refs [1]} {:plid 8, :body Q, :roth :impl-e, :refs [4 7]} {:plid 9, :body (not Q), :roth :and-e2, :refs [1]} {:plid 10, :body contradiction, :roth :not-e, :refs [9 8]}] {:plid 2, :body (not (impl P Q)), :roth :not-i, :refs [[4 10]]}]}
{:id :resolution, :given [(or P Q) (or (not P) R)], :conclusion [(or Q R)], :proof [{:plid 1, :roth :premise, :body (or P Q)} {:plid 2, :roth :premise, :body (or (not P) R)} {:plid 5, :body (or P (not P)), :roth :tnd, :refs []} [{:plid 6, :body P, :roth :assumption, :refs nil} {:plid 12, :body (impl P R), :roth :or-not->impl, :refs [2]} {:plid 13, :body R, :roth :impl-e, :refs [12 6]} {:plid 8, :body (or Q R), :roth :or-i2, :refs [13]}] [{:plid 9, :body (not P), :roth :assumption, :refs nil} [{:plid 15, :body P, :roth :assumption, :refs nil} {:plid 21, :body contradiction, :roth :not-e, :refs [9 15]} {:plid 17, :body (or Q R), :roth :efq, :refs [21]}] [{:plid 18, :body Q, :roth :assumption, :refs nil} {:plid 20, :body (or Q R), :roth :or-i1, :refs [18]}] {:plid 11, :body (or Q R), :roth :or-e, :refs [1 [15 17] [18 20]]}] {:plid 3, :body (or Q R), :roth :or-e, :refs [5 [6 8] [9 11]]}]}